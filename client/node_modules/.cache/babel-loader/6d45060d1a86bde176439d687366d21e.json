{"ast":null,"code":"var _jsxFileName = \"/home/adityadev/Code/MERN/client/src/pages/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { GET_POSTS_SERVICE } from \"../api/service\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { POST_LIKE_SERVICE, POST_UNLIKE_SERVICE } from \"../api/service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const data = useSelector(state => {\n    var _state$authReducer;\n\n    return (_state$authReducer = state.authReducer) === null || _state$authReducer === void 0 ? void 0 : _state$authReducer.user;\n  });\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const res = await GET_POSTS_SERVICE();\n        setPosts(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  const handleLike = async id => {\n    try {\n      const res = await POST_LIKE_SERVICE(id);\n      const updatedPosts = posts.map(post => post._id === id ? { ...post,\n        likes: res.data\n      } : post);\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDisLike = async id => {\n    try {\n      const res = await POST_UNLIKE_SERVICE(id);\n      const updatedPosts = posts.map(post => post._id === id ? { ...post,\n        likes: res.data\n      } : post);\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-primary\",\n      to: \"/add-post\",\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Likes: \", post.likes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleLike(post._id),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleDisLike(post._id),\n            children: \"DisLike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.user === (data === null || data === void 0 ? void 0 : data._id) ? \"Can delete\" : \"Cannot delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true);\n};\n\n_s(Posts, \"Dj7CyhUJQ9hEo1BhU/ztuPGKusE=\", false, function () {\n  return [useSelector];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/adityadev/Code/MERN/client/src/pages/Posts.js"],"names":["React","useEffect","useState","GET_POSTS_SERVICE","useSelector","Link","Button","POST_LIKE_SERVICE","POST_UNLIKE_SERVICE","Posts","posts","setPosts","data","state","authReducer","user","fetchPosts","res","error","console","log","handleLike","id","updatedPosts","map","post","_id","likes","handleDisLike","content","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GET_POSTS_SERVICE } from \"../api/service\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { POST_LIKE_SERVICE, POST_UNLIKE_SERVICE } from \"../api/service\";\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const data = useSelector((state) => state.authReducer?.user);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const res = await GET_POSTS_SERVICE();\n        setPosts(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchPosts();\n  }, []);\n\n  const handleLike = async (id) => {\n    try {\n      const res = await POST_LIKE_SERVICE(id);\n      const updatedPosts = posts.map((post) =>\n        post._id === id ? { ...post, likes: res.data } : post\n      );\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDisLike = async (id) => {\n    try {\n      const res = await POST_UNLIKE_SERVICE(id);\n      const updatedPosts = posts.map((post) =>\n        post._id === id ? { ...post, likes: res.data } : post\n      );\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <h1>posts</h1>\n      <Link className=\"btn btn-primary\" to=\"/add-post\">\n        Add Post\n      </Link>\n      {posts.map((post) => {\n        return (\n          <>\n            <div className=\"bg-light\" key={post._id}>\n              <p>{post.content}</p>\n              <p>Total Likes: {post.likes.length}</p>\n              <Button onClick={() => handleLike(post._id)}>Like</Button>\n              <Button onClick={() => handleDisLike(post._id)}>DisLike</Button>\n              <p>{post.user === data?._id ? \"Can delete\" : \"Cannot delete\"}</p>\n            </div>\n          </>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}