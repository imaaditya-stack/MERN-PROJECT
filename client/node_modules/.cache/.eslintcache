[{"/home/adityadev/Code/MERN/client/src/index.js":"1","/home/adityadev/Code/MERN/client/src/App.js":"2","/home/adityadev/Code/MERN/client/src/reportWebVitals.js":"3","/home/adityadev/Code/MERN/client/src/pages/Landing.js":"4","/home/adityadev/Code/MERN/client/src/components/Header.jsx":"5","/home/adityadev/Code/MERN/client/src/pages/Register.js":"6","/home/adityadev/Code/MERN/client/src/pages/Login.js":"7","/home/adityadev/Code/MERN/client/src/api/service.js":"8","/home/adityadev/Code/MERN/client/src/api/config.js":"9","/home/adityadev/Code/MERN/client/src/redux/actions/actions.js":"10","/home/adityadev/Code/MERN/client/src/redux/actions/types.js":"11","/home/adityadev/Code/MERN/client/src/redux/store/index.js":"12","/home/adityadev/Code/MERN/client/src/redux/reducers/index.js":"13","/home/adityadev/Code/MERN/client/src/redux/reducers/authReducer.js":"14","/home/adityadev/Code/MERN/client/src/auth/auth.service.js":"15","/home/adityadev/Code/MERN/client/src/pages/Dashboard.js":"16","/home/adityadev/Code/MERN/client/src/pages/Create.Profile.js":"17","/home/adityadev/Code/MERN/client/src/auth/auth.token.js":"18","/home/adityadev/Code/MERN/client/src/pages/Create.Experience.js":"19","/home/adityadev/Code/MERN/client/src/pages/Create.Education.js":"20","/home/adityadev/Code/MERN/client/src/pages/Profiles.js":"21","/home/adityadev/Code/MERN/client/src/pages/Posts.js":"22"},{"size":343,"mtime":1616067179002,"results":"23","hashOfConfig":"24"},{"size":1752,"mtime":1616416668388,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1616053199096,"results":"26","hashOfConfig":"27"},{"size":139,"mtime":1616054992351,"results":"28","hashOfConfig":"24"},{"size":779,"mtime":1616410951174,"results":"29","hashOfConfig":"24"},{"size":2055,"mtime":1616068038153,"results":"30","hashOfConfig":"24"},{"size":1656,"mtime":1616084614078,"results":"31","hashOfConfig":"24"},{"size":2681,"mtime":1616413252734,"results":"32","hashOfConfig":"24"},{"size":363,"mtime":1616413157880,"results":"33","hashOfConfig":"24"},{"size":137,"mtime":1616066837222,"results":"34","hashOfConfig":"24"},{"size":36,"mtime":1616066524489,"results":"35","hashOfConfig":"24"},{"size":209,"mtime":1616067387509,"results":"36","hashOfConfig":"24"},{"size":169,"mtime":1616067072960,"results":"37","hashOfConfig":"24"},{"size":284,"mtime":1616067005899,"results":"38","hashOfConfig":"24"},{"size":462,"mtime":1616398905898,"results":"39","hashOfConfig":"24"},{"size":3919,"mtime":1616410139057,"results":"40","hashOfConfig":"24"},{"size":4537,"mtime":1616401612465,"results":"41","hashOfConfig":"24"},{"size":189,"mtime":1616398894354,"results":"42","hashOfConfig":"24"},{"size":2845,"mtime":1616402994152,"results":"43","hashOfConfig":"24"},{"size":2844,"mtime":1616405442164,"results":"44","hashOfConfig":"24"},{"size":455,"mtime":1616411486349,"results":"45","hashOfConfig":"24"},{"size":799,"mtime":1616419601821,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1laljo6",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9el66x",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/adityadev/Code/MERN/client/src/index.js",[],["94","95"],"/home/adityadev/Code/MERN/client/src/App.js",[],"/home/adityadev/Code/MERN/client/src/reportWebVitals.js",[],"/home/adityadev/Code/MERN/client/src/pages/Landing.js",[],"/home/adityadev/Code/MERN/client/src/components/Header.jsx",[],"/home/adityadev/Code/MERN/client/src/pages/Register.js",[],"/home/adityadev/Code/MERN/client/src/pages/Login.js",[],"/home/adityadev/Code/MERN/client/src/api/service.js",[],"/home/adityadev/Code/MERN/client/src/api/config.js",[],"/home/adityadev/Code/MERN/client/src/redux/actions/actions.js",[],"/home/adityadev/Code/MERN/client/src/redux/actions/types.js",[],"/home/adityadev/Code/MERN/client/src/redux/store/index.js",[],"/home/adityadev/Code/MERN/client/src/redux/reducers/index.js",[],"/home/adityadev/Code/MERN/client/src/redux/reducers/authReducer.js",[],"/home/adityadev/Code/MERN/client/src/auth/auth.service.js",[],"/home/adityadev/Code/MERN/client/src/pages/Dashboard.js",[],"/home/adityadev/Code/MERN/client/src/pages/Create.Profile.js",["96"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { PROFILE_SERVICE, GET_PROFILE_SERVICE } from \"../api/service\";\n\nconst CreateProfile = () => {\n  const [formData, setFormData] = useState({\n    status: \"\",\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    skills: \"\",\n    githubUsername: \"\",\n    bio: \"\",\n  });\n\n  const [updateProfile, setUpdateProfile] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await PROFILE_SERVICE({\n        company: formData.company,\n        website: formData.website,\n        location: formData.location,\n        status: formData.status,\n        skills: formData.skills,\n        bio: formData.bio,\n        githubusername: formData.githubUsername,\n      });\n      updateProfile\n        ? alert(\"Profile Updated Successfully\")\n        : alert(\"Profile Created Successfully\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const getProfile = async () => {\n    try {\n      const res = await GET_PROFILE_SERVICE();\n      setFormData({\n        company: !res.data.company ? \"\" : res.data.company,\n        status: !res.data.status ? \"\" : res.data.status,\n        website: !res.data.website ? \"\" : res.data.website,\n        location: !res.data.location ? \"\" : res.data.location,\n        skills: !res.data.skills ? \"\" : res.data.skills.toString(),\n        githubUsername: !res.data.githubusername ? \"\" : res.data.githubusername,\n        bio: !res.data.bio ? \"\" : res.data.bio,\n      });\n      setUpdateProfile(true);\n    } catch (error) {\n      if (error.response.status === 400) {\n        console.log(\"Profile Doesn't Exists\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    getProfile();\n  }, []);\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label>Select Professional Status</Form.Label>\n          <Form.Control\n            as=\"select\"\n            name=\"status\"\n            onChange={handleChange}\n            value={formData.status}\n          >\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Company</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"company\"\n            onChange={handleChange}\n            value={formData.company}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicCompany\">\n          <Form.Label>Website</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"website\"\n            onChange={handleChange}\n            value={formData.website}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicLocation\">\n          <Form.Label>Location</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"location\"\n            onChange={handleChange}\n            value={formData.location}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicSkills\">\n          <Form.Label>Skills</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"skills\"\n            onChange={handleChange}\n            value={formData.skills}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicGusername\">\n          <Form.Label>Github Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"githubUsername\"\n            onChange={handleChange}\n            value={formData.githubUsername}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"bio\">\n          <Form.Label>Tell us a bit about yourself</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            name=\"bio\"\n            onChange={handleChange}\n            value={formData.bio}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Add Profile\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default CreateProfile;\n","/home/adityadev/Code/MERN/client/src/auth/auth.token.js",[],"/home/adityadev/Code/MERN/client/src/pages/Create.Experience.js",[],"/home/adityadev/Code/MERN/client/src/pages/Create.Education.js",[],"/home/adityadev/Code/MERN/client/src/pages/Profiles.js",["97"],"import React, { useState, useEffect } from \"react\";\nimport { PROFILES_SERVICE } from \"../api/service\";\n\nconst Profiles = () => {\n  useEffect(() => {\n    const fetchProfiles = async () => {\n      try {\n        const res = await PROFILES_SERVICE();\n        console.log(res);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchProfiles();\n  }, []);\n  return (\n    <>\n      <h1>Profiles</h1>\n    </>\n  );\n};\n\nexport default Profiles;\n","/home/adityadev/Code/MERN/client/src/pages/Posts.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":21,"column":13,"nodeType":"104","messageId":"105","endLine":21,"endColumn":16},{"ruleId":"102","severity":1,"message":"106","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]